name: feature-ci

on:
  push:
    branches:
      - 'feature/**'

jobs:
  packages:
    timeout-minutes: 5
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 18.x ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

  audit-packages:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    continue-on-error: true

    strategy:
      matrix:
        node-version: [ 14.x, 16.x, 18.x ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'

      - name: Audit Packages
        run: npm audit --audit-level moderate
        env:
          CI: true

  lint:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [ packages, audit-packages ]

    strategy:
      matrix:
        node-version: [ 14.x, 16.x, 18.x ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        id: npm-cache
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  unit-test:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [ lint ]

    strategy:
      matrix:
        node-version: [ 14.x, 16.x, 18.x ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        id: npm-cache
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: npm run test

  e2e:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [ lint ]

    strategy:
      matrix:
        node-version: [ 14.x, 16.x, 18.x ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        id: npm-cache
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: npm run test:e2e

  coverage:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [ lint ]

    strategy:
      matrix:
        node-version: [ 14.x, 16.x, 18.x ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        id: npm-cache
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: npm run test:cov

  build:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [ unit-test, e2e, coverage ]

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        node-version: [ 18.x ]

    steps:
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        id: npm-cache
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'

      - name: Get Package Version
        run: |
          export VERSION=$(node -p "require('./package.json').version")-${{github.run_id}}.${{ github.sha }}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Change Version Package.json
        uses: reedyuk/npm-version@1.1.1
        with:
          version: ${{ env.VERSION }}

      - name: Install Dependencies
        run: npm ci

      - name: Build Artifact
        run: npm run build
        env:
          NODE_ENV: 'production'

      - uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node-version}}
          registry-url: 'https://npm.pkg.github.com'
          scope: '@maikoncanuto'
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  container:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'

      - name: Get Package Version
        run: |
          export VERSION=$(node -p "require('./package.json').version")-${{github.run_id}}.${{ github.sha }}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build -t "$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]' ):${{ env.VERSION }}" .

      - name: Push Docker Image to GitHub Packages
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login -u ${{ github.actor }} --password-stdin docker.pkg.github.com
          docker push "docker.pkg.github.com/${{ github.repository }}:${{ env.VERSION }}"
