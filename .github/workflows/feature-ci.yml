name: feature-ci

on:
  push:
    branches:
      - 'feature/*'
  pull_request:
    branches:
      - 'feature/*'

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm ci

      - name: Cache Dependencies of node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

  analyze-code:
    runs-on: ubuntu-latest
    needs: [install-dependencies]

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
      - name: Restore Cached Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'

      - name: Install Dependencies
        run: npm i

      - name: Eslint
        run: npm run lint

      - name: Unit Tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: [analyze-code]
    steps:
      - name: Restore Cached Dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'

      - name: Install Dependencies
        run: npm i

      - name: Build Artifact
        run: npm run build
        env:
          NODE_ENV: 'production'
