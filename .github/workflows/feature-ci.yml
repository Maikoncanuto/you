name: feature-ci

on:
  push:
    branches:
      - 'feature/**'
jobs:
  packages:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

  audit-packages:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Audit Packages
        run: npm audit --audit-level moderate
        env:
          CI: true

  lint:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [ packages, audit-packages ]

    strategy:
      matrix:
        node-version: [ 18.x ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        id: npm-cache
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  test:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [ lint ]

    strategy:
      matrix:
        node-version: [ 18.x ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        id: npm-cache
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm ci

      - name: Lint
        run: npm run test

  build:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Restore Cached Dependencies
        uses: actions/cache@v3
        id: npm-cache
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          node-version: ${{matrix.node-version}}
          cache: 'npm'

      - name: Get Package Version
        run: echo "Package Version: $(node -p \"require('./package.json').version\")"
        id: get_version

      - name: Change Version Package.json
        uses: reedyuk/npm-version@1.1.1
        with:
          version: ${{ steps.get_version.outputs.stdout }}-${{ github.run_id }}-${{ github.sha }}

      - name: Install Dependencies
        run: npm i

      - name: Build Artifact
        run: npm run build
        env:
          NODE_ENV: 'production'

      - name: Publish for Github Packages
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@octocat'
      - run: npm ci
      - run: npm publish